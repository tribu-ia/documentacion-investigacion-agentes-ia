{
  "name": "agents",
  "nodes": [
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1vW9ngNpA5UQQTlkCPvdfAoXY3p_Omfj_jZ_d6H1jKik",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vW9ngNpA5UQQTlkCPvdfAoXY3p_Omfj_jZ_d6H1jKik/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "createdBy",
              "displayName": "createdBy",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "website",
              "displayName": "website",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "access",
              "displayName": "access",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pricingModel",
              "displayName": "pricingModel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "category",
              "displayName": "category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "industry",
              "displayName": "industry",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "shortDescription",
              "displayName": "shortDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "longDescription",
              "displayName": "longDescription",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "agents",
              "displayName": "agents",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "keyFeatures",
              "displayName": "keyFeatures",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "useCases",
              "displayName": "useCases",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "tags",
              "displayName": "tags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logo",
              "displayName": "logo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "logoFileName",
              "displayName": "logoFileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "imageFileName",
              "displayName": "imageFileName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "video",
              "displayName": "video",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "upvotes",
              "displayName": "upvotes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "upvoters",
              "displayName": "upvoters",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "approved",
              "displayName": "approved",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "createdAt",
              "displayName": "createdAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "slug",
              "displayName": "slug",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "version",
              "displayName": "version",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "featured",
              "displayName": "featured",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "a329b186-5cea-492d-9217-b7bb370c16a1",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        400,
        360
      ],
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "BAJejdSHFEczHgWe",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 0
            }
          ]
        }
      },
      "name": "Daily Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -1020,
        880
      ],
      "id": "aff43700-ef0d-4ced-83a4-991ce237153a"
    },
    {
      "parameters": {
        "functionCode": "return [\n  \n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ads-ai-agents.json?category=ads-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/gaming-agents.json?category=gaming-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/authentication-agents.json?category=authentication-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/desktop-ai-agents.json?category=desktop-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/travel-ai-agent.json?category=travel-ai-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/website-builder-agent.json?category=website-builder-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-shopping-agents.json?category=ai-shopping-agents' } },\n\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/education-ai-agents.json?category=education-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/music-ai-agents.json?category=music-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/data-science.json?category=data-science' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/translation-ai-agents.json?category=translation-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/operations-ai-agents.json?category=operations-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-avatar.json?category=ai-avatar' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-agent-memory.json?category=ai-agent-memory' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-docs-agents.json?category=ai-docs-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/tool-libraries.json?category=tool-libraries' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/agentic-ide.json?category=agentic-ide' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/web-scraping.json?category=web-scraping' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-security.json?category=ai-security' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/recruiting-ai-agents.json?category=recruiting-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/email-ai-agents.json?category=email-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/lead-generation-ai-agent.json?category=lead-generation-ai-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/coding-library.json?category=coding-library' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/web-3.json?category=web-3' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/software-testing-agent.json?category=software-testing-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/web-ai-agents.json?category=web-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/model-serving.json?category=model-serving' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-video-agents.json?category=ai-video-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/marketing-ai-agent.json?category=marketing-ai-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/research.json?category=research' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/coding-agent.json?category=coding-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/content-creation.json?category=content-creation' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/sales-ai-agent.json?category=sales-ai-agent' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/workflow.json?category=workflow' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/customer-service.json?category=customer-service' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/personal-assistant.json?category=personal-assistant' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/coding-assistant.json?category=coding-assistant' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/digital-workers.json?category=digital-workers' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/data-analysis.json?category=data-analysis' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/voice-ai-agents.json?category=voice-ai-agents' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-agents-platform.json?category=ai-agents-platform' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/ai-agents-frameworks.json?category=ai-agents-frameworks' } },\n  { json: { url: 'https://aiagentsdirectory.com/_next/data/Ce4NOlQYBVWJFqxfAjy3V/category/productivity.json?category=productivity' } }\n\n];\n\n\n\n"
      },
      "name": "Generate URLs",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -600,
        420
      ],
      "id": "fd4cba2f-a53a-4a60-ae85-a48329a68d65"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "Split In Batches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -460,
        800
      ],
      "id": "dced9809-b5f3-4b14-9787-1cd7f507d81a"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "name": "Fetch Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -340,
        560
      ],
      "id": "1883526c-f8b7-4fb3-9e1e-0434bb78d48c"
    },
    {
      "parameters": {
        "content": "## Extracion datos diarios",
        "height": 707.5024545984363,
        "width": 925.2021085146283
      },
      "id": "cac45b03-9580-457a-ace7-f14099ec94a4",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -940,
        300
      ]
    },
    {
      "parameters": {
        "content": "## Formulario recomendaciones",
        "height": 364.6493848884661,
        "width": 1199
      },
      "id": "2c7b3117-a5f4-491a-8fe3-8e89bb7a5c78",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -960,
        -580
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://036c-181-51-32-139.ngrok-free.app/query/hybrid-search",
        "jsonParameters": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={\n  \"query\": \"{{ $json['Caso de uso'] || 'Valor por defecto' }}\"\n}\n"
      },
      "name": "Rag Query Search1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -520,
        -460
      ],
      "id": "290995b0-6c1b-4f21-b52b-ef4a5659a872",
      "disabled": true
    },
    {
      "parameters": {
        "formTitle": "IA Agents",
        "formDescription": "IA Agents",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Caso de uso",
              "fieldType": "=dropdown",
              "fieldOptions": {
                "values": [
                  {}
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "id": "24990a3f-f837-4d2f-8dff-d41409d47373",
      "name": "On form submission1",
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -880,
        -460
      ],
      "webhookId": "1882a78a-cf32-4f4f-b39f-60020bd9e8ff",
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "lookup",
        "sheetId": "1vW9ngNpA5UQQTlkCPvdfAoXY3p_Omfj_jZ_d6H1jKik",
        "range": "A:Z",
        "lookupColumn": "id",
        "lookupValue": "={{ $json.id }}",
        "options": {}
      },
      "name": "Google Sheets Lookup1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        -120,
        -460
      ],
      "id": "ff0e31bd-8823-4b4d-8431-853592ca6da4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "BAJejdSHFEczHgWe",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "functionCode": "const results = $json.results || [];\nreturn results.map(result => ({\n  json: {\n    id: result.metadata.id,\n    name: result.metadata.name,\n    website: result.metadata.website,\n    category: result.metadata.category,\n    industry: result.metadata.industry\n  }\n}));"
      },
      "name": "Extract IDs1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -320,
        -460
      ],
      "id": "c4ea1204-ac87-48f0-a9f4-4f48a979a3cf",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## actualizacion moldeos de datos",
        "height": 891.3744613275005,
        "width": 1011.2109643637334
      },
      "id": "fd30fab5-314b-4cc9-a177-cca36287d4a9",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        120
      ]
    },
    {
      "parameters": {
        "functionCode": "return [\n  {\n    json: {\n      data: $input.all().map(item => item.json)\n    }\n  }\n];"
      },
      "name": "Consolidar Datos",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        240,
        200
      ],
      "id": "9687a05a-e566-4855-846d-63d30ccaf1ab"
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 0
            }
          ]
        }
      },
      "name": "Daily Trigger1",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -980,
        1500
      ],
      "id": "c15cd0e6-de5b-4e98-9457-b675e7b47cf5",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Control documentacion",
        "height": 489.54431846193825,
        "width": 925.2021085146283
      },
      "id": "dcdb0afb-d387-467f-b0dc-1f75ccaf3f71",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1020,
        1360
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "https://github.com/tribu-ia",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "documentacion-investigacion-agentes-ia",
          "mode": "list",
          "cachedResultName": "documentacion-investigacion-agentes-ia",
          "cachedResultUrl": "https://github.com/tribu-ia/documentacion-investigacion-agentes-ia"
        },
        "filePath": "="
      },
      "id": "07201f56-19e5-468a-819e-a7612f84b1d3",
      "name": "GitHub2",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        -780,
        1500
      ],
      "credentials": {
        "githubApi": {
          "id": "SLyJgsacOwxbZPvS",
          "name": "GitHub account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "https://github.com/tribu-ia",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "https://github.com/tribu-ia/.github/blob/main/",
          "mode": "url"
        },
        "filePath": "LINEAMIENTO_DOCUMENTACION_AGENTES_V2.md",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "663e5c3e-e167-4a22-b06f-198647c7b985",
      "name": "Documentacion",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        -880,
        420
      ],
      "credentials": {
        "githubApi": {
          "id": "SLyJgsacOwxbZPvS",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n   // Decodificar el contenido Base64\n   const decodedText = Buffer.from(item.json.content, 'base64').toString('utf-8');\n   return { json: { decodedText } }; // Devuelve el texto decodificado\n});\n"
      },
      "id": "4d2e928b-5d0f-40d9-bd40-d847315e48b8",
      "name": "Extraccion base 64",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0dc6d439-60fb-49f6-b4d5-f5cce6f030ad",
              "name": "error",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a38b38e3-490d-4951-8c21-a2f0caf5c63e",
      "name": "Catch Errors1",
      "type": "n8n-nodes-base.set",
      "position": [
        220,
        1640
      ],
      "typeVersion": 3.4,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0c52f57f-74eb-4385-ac6b-f3e5f4f50e73",
              "name": "output",
              "type": "object",
              "value": "={{ $json.output.replace(/^.*?({.*}).*$/s, '$1') }}"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "id": "42d7c35a-e66f-4bd9-b905-d4ff6d9677e2",
      "name": "varJSON1",
      "type": "n8n-nodes-base.set",
      "position": [
        0,
        1500
      ],
      "typeVersion": 3.4,
      "disabled": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "## Convertir a JSON",
        "height": 463.0204081632651,
        "width": 441.003537414966,
        "color": 5
      },
      "id": "a486a637-9d62-429e-a554-a7363428fc86",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -60,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Categories\n",
        "height": 454.93986394557805,
        "width": 311.71482993197264,
        "color": 5
      },
      "id": "82f1a176-8e15-43cf-a77f-8696437a0adf",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        420,
        1360
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "junk"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "junk"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "0c61c7a8-e8b4-49c5-a96c-402d5eae7089",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "receipt"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "receipt"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "703f65c8-cf4a-47fe-ad1a-a5f6e0412ae7",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "SaaS"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "SaaS"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b074d5cd-9215-40df-8877-5df904edc000",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "community"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "community"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "bece338a-e0c5-43b5-b8cc-41229a374213",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "action"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "action"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": false,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "d6c9751f-0ffa-4041-a579-6957bb9c9296",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.output.category }}",
                    "rightValue": "business"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "business"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "ignoreCase": true
        }
      },
      "id": "e5fcbf67-3fe5-4c7b-b93c-af9df6eaafac",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "position": [
        520,
        1520
      ],
      "typeVersion": 3.2,
      "disabled": true
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "messages": {
          "values": [
            {}
          ]
        },
        "options": {}
      },
      "id": "58d078ca-6ca8-4fa4-889b-309577b0befc",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        760,
        1540
      ],
      "credentials": {
        "openAiApi": {
          "id": "h9iYynzbWFPgbGCz",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Categorise the following email\n<email>\n{{ $('varEmal1').first().json.toJsonString() }}\n</email>\n\nEnsure your final output is valid JSON with no additional text or token in the following format:\n\n{\n  \"subject\": \"SUBJECT_LINE\",1\n  \"category\": \"CATEGORY\",\n  \"subCategory\": \"SUBCATEGORY\", //use sparingly\n  \"analysis\": \"ANALYSIS_REASONING\"\n}\n\nRemember you can only use ONE of the following categories {{ $json.category }}. No other categories can be used. Use the subcategory for additional context, for example, if a SaaS email requires action, or if a business email requires action. Do not create any additional subcategories, you can only use ONE of the following {{ $json.category }}.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You're an AI assistant for a freelance developer, categorizing emails as {{ $json.category }}. Email info is in <email> tags.\n\nCategorization priority:\n\nAction: Needs response or action (includes some SaaS emails), avoid sales email but include enquires.\nJunk: Ads, sales, newsletters, promotions, daily digests, (emojis often indicate junk), phishing, scams, discounts etc.\nReceipt: Any purchase confirmation.\nSaaS: Account/security updates, unless action required, generic SaaS information, usually from a non-personal email address.\nCommunity: Updates, events, forums, everything related to \"community\".\nBusiness: Any communication related to freelance work, usually from a humans email address\nOther: Doesn't fit into any other category.\n\nKey points:\n\nSaaS emails needing action are \"SaaS\" and subcategory \"action\".\nAnalyze the subject, body, email addresses and other data.\nLook for specific keywords and phrases for each category.\nEmail can have 2 categories, primary and sub, for example, \"action\" and \"SaaS\" or \"action\" and \"business\".\nEmails from business development executives are often junk.\n\n\nOutput in valid JSON format:\n{\n\"subject\": \"SUBJECT_LINE\",\n\"category\": \"PRIMARY CATEGORY\",\n\"subCategory\": \"SUBCATEGORY\", //use sparingly\n\"analysis\": \"Brief 1-2 sentence explanation of category choice\"\n}\nNo additional text or tokens outside the JSON.\n\nYou may only use the following categories and subcategories, do not create any more categories or subcategories: {{ $json.category }}"
        }
      },
      "id": "966473cc-9ddb-4722-86b9-db221b4cfa19",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -560,
        1500
      ],
      "typeVersion": 1.6,
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "https://github.com/tribu-ia",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "documentacion-investigacion-agentes-ia",
          "mode": "list",
          "cachedResultName": "documentacion-investigacion-agentes-ia",
          "cachedResultUrl": "https://github.com/tribu-ia/documentacion-investigacion-agentes-ia"
        },
        "filePath": "={{ $('Normalize Data').item.json.slug }}/documentacion.md",
        "binaryData": "={{ false }}",
        "fileContent": "=# IMPORTANTE:\n\nEsta documentación fue generada como temple base para ti. por favor complementala y elimina este comentario una vez hayas documentado tu agente\n\nGuia documentación: {{ $('Documentacion').item.json.url }}\n\n\n{{ $json.output }}",
        "commitMessage": "=Documentacion generada para {{ $('Normalize Data').item.json.name }} "
      },
      "id": "19c71e28-36c4-4ba1-b832-7b39c273fa80",
      "name": "Creacion archivo base agente",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        540,
        760
      ],
      "credentials": {
        "githubApi": {
          "id": "SLyJgsacOwxbZPvS",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "functionCode": "const agents = $json.pageProps?.agents || []; // Asegúrate de que sea una lista\nreturn agents.map(agent => ({\n  json: {\n    id: agent._id || null,\n    name: agent.name || null,\n    createdBy: agent.createdBy || null,\n    website: agent.website || null,\n    access: agent.access || null,\n    pricingModel: agent.pricingModel || null,\n    category: agent.category || null,\n    industry: agent.industry || null,\n    shortDescription: agent.shortDescription || null,\n    longDescription: agent.longDescription ? agent.longDescription.substring(0, 50000) : null, // Limitar texto largo\n    keyFeatures: agent.keyFeatures ? agent.keyFeatures.join(\", \") : null, // Combinar array en texto\n    useCases: agent.useCases ? agent.useCases.join(\", \") : null, // Combinar array en texto\n    tags: agent.tags || null,\n    logo: agent.logo || null,\n    logoFileName: agent.logoFileName || null,\n    image: agent.image || null,\n    imageFileName: agent.imageFileName || null,\n    video: agent.video || null,\n    upvotes: agent.upvotes || 0,\n    upvoters: agent.upvoters ? agent.upvoters.join(\", \") : null, // Combinar array en texto\n    approved: agent.approved || false,\n    createdAt: agent.createdAt || null,\n    slug: agent.slug || null,\n    version: agent.__v || null,\n    featured: agent.featured || false\n  }\n}));\n"
      },
      "name": "Normalize Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -260,
        360
      ],
      "id": "870b21ad-d884-499d-965d-4f2a0d50cd96"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dda59086-141e-4e7c-a629-a55f64810592",
              "leftValue": "={{ $json.path }}",
              "rightValue": "={{ $('Normalize Data').item.json.slug }}",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "975f9d12-a71a-441d-bcc8-6d4019c0d2fc",
              "leftValue": "={{ $json.error }}",
              "rightValue": "The resource you are requesting could not be found",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d60bb404-df42-444f-8146-f35e1a7dada8",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        880
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "https://github.com/tribu-ia",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "documentacion-investigacion-agentes-ia",
          "mode": "list",
          "cachedResultName": "documentacion-investigacion-agentes-ia",
          "cachedResultUrl": "https://github.com/tribu-ia/documentacion-investigacion-agentes-ia"
        },
        "filePath": "={{ $json.slug }}",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "82c43217-41be-4dc3-81c1-bd902f192930",
      "name": "Existe documentacion",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        -140,
        880
      ],
      "credentials": {
        "githubApi": {
          "id": "SLyJgsacOwxbZPvS",
          "name": "GitHub account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "id": "ab54b2f6-a0c2-4f60-9837-e31d1a7ffc1f",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        900,
        880
      ]
    },
    {
      "parameters": {
        "modelName": "models/gemini-1.5-flash-001",
        "options": {}
      },
      "id": "3dbfd93e-4298-43a5-979d-310e49df83c2",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        320,
        740
      ],
      "credentials": {
        "googlePalmApi": {
          "id": "jGh65HpIiX5pKoZ8",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Create the template documentation for this AGENT {{ $('Normalize Data').item.json.name }}\n\n<INPUT_DATA>\nname:{{ $('Normalize Data').item.json.name }}\ncreatedBy:{{ $('Normalize Data').item.json.createdBy }}\nwebsite:{{ $('Normalize Data').item.json.website }}\naccess:{{ $('Normalize Data').item.json.access }}\npricingModel:{{ $('Normalize Data').item.json.pricingModel }}\ncategory:{{ $('Normalize Data').item.json.category }}\nindustry:{{ $('Normalize Data').item.json.industry }}\nshortDescription:{{ $('Normalize Data').item.json.shortDescription }}\nlongDescription:{{ $('Normalize Data').item.json.longDescription }}\nkeyFeatures:{{ $('Normalize Data').item.json.keyFeatures }}\nuseCases:{{ $('Normalize Data').item.json.useCases }}\ntags:{{ $('Normalize Data').item.json.tags }}\nlogo:{{ $('Normalize Data').item.json.logo }}\nvideo:{{ $('Normalize Data').item.json.video }}\nslug:{{ $('Normalize Data').item.json.slug }}\n<INPUT_DATA>\n\n",
        "options": {
          "systemMessage": "=Act as an expert documentation specialist in the analysis of AI agents. Your task is to generate a detailed and structured base document that serves as a reference for investigating and documenting AI agents. Use the preliminary data provided to you about the AI agent to produce a comprehensive document adhering to professional documentation standards.\n\nObjective\nCreate a document that includes:\n\nIntroduction: Brief description of the AI agent and its purpose.\nInitial Classification: Identification of its category within the AI ecosystem and implementation level.\nKey Capabilities: List of main features and technical scope.\nTechnical Architecture: Description of its structure, dependencies, and internal workings.\nUse Cases: Specific examples where the agent is beneficial and its limitations.\nImplementation Guide: Steps required to configure and integrate the agent.\nComparative Analysis: Key differentiators and position compared to alternatives.\nPricing and Evaluation: Cost breakdown and analysis of commercial value.\nSummary: Highlight strengths, weaknesses, and best use cases.\nInstructions\nFormat: Follow a professional Markdown structure.\nAccuracy: Ensure all points are based on the provided data and are well-organized.\nConsistency: Use an objective, clear, and professional tone.\nComplexity: Provide detailed technical explanations while ensuring they are accessible to both technical and general audiences.\nInput Data\nYou will receive the AI agent's data in a structured JSON format. Use this data to complete all sections of the document.\n\n<EXPECTED_OUTPUT>\nGenerate a structured, easy-to-use template document based on the guidelines provided below. The output should provide placeholders for users to fill in relevant data and clearly separate each section for readability and usability. Use parameterized values or spaces for user filled after as placeholders for dynamic content and this a git hub documentantion thah means the expeted OUTPUT have to be in .md format\n<EXPECTED_OUTPUT>\n\n\n<DOCUMENTATION_INSTRUCTION>\n{{ $('Extraccion base 64').item.json.decodedText }}\n<DOCUMENTATION_INSTRUCTION>"
        }
      },
      "id": "1252abf9-9d72-455e-bb40-0099d21bebcb",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        320,
        560
      ],
      "retryOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://tribu-back.pruebas-entrevistador-inteligente.site/upload-json/elasticsearch",
        "jsonParameters": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={{ JSON.stringify({ data: $input.all() }) }}"
      },
      "name": "Rag Query Search2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        860,
        -40
      ],
      "id": "c920ee18-d52f-4659-959a-81d8173c116d"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://tribu-back.pruebas-entrevistador-inteligente.site/upload-json/elasticsearch",
        "jsonParameters": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={{ JSON.stringify({ data: $input.all() }) }}"
      },
      "name": "CORE",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        860,
        200
      ],
      "id": "d196586f-f336-4c6e-9bde-1220b24f764f"
    }
  ],
  "pinData": {},
  "connections": {
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Daily Trigger": {
      "main": [
        [
          {
            "node": "Documentacion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate URLs": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches": {
      "main": [
        [
          {
            "node": "Fetch Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Data": {
      "main": [
        [
          {
            "node": "Normalize Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission1": {
      "main": [
        [
          {
            "node": "Rag Query Search1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract IDs1": {
      "main": [
        [
          {
            "node": "Google Sheets Lookup1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rag Query Search1": {
      "main": [
        [
          {
            "node": "Extract IDs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consolidar Datos": {
      "main": [
        [
          {
            "node": "CORE",
            "type": "main",
            "index": 0
          },
          {
            "node": "Rag Query Search2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Daily Trigger1": {
      "main": [
        [
          {
            "node": "GitHub2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Documentacion": {
      "main": [
        [
          {
            "node": "Extraccion base 64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extraccion base 64": {
      "main": [
        [
          {
            "node": "Generate URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub2": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "varJSON1": {
      "main": [
        [],
        [
          {
            "node": "Catch Errors1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Catch Errors1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "varJSON1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Creacion archivo base agente": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Normalize Data": {
      "main": [
        [
          {
            "node": "Existe documentacion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Consolidar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Existe documentacion": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Creacion archivo base agente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CORE": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ea5fdd21-9193-48ed-94d9-2ef8ae5a9afa",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "62d6182550bdfc22ef3f79d13ccd7acf84723c82e84043a45bb4566cadc450cf"
  },
  "id": "iG7pG2TXgXz0XyK8",
  "tags": []
}